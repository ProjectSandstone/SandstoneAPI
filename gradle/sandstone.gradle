// Shared gradle config

// IDE
apply plugin: 'idea'
apply plugin: 'eclipse'

// Programming Language
apply plugin: 'kotlin'
apply plugin: "org.jetbrains.kotlin.kapt"
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'net.ltgt.apt'
apply plugin: 'java'

// License
apply plugin: 'license'

// Shade
apply plugin: 'com.github.johnrengelman.shadow'

license {
    header rootProject.file("LICENSE_HEADER")
}

sourceCompatibility = 1.8

// Tasks
jar {
    from "$rootProject.rootDir/LICENSE"

    manifest {
        attributes 'Implementation-Title': baseName,
                'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {

    // Dependency injection
    compile "com.google.inject:guice:$guice_version"
    compile "com.google.guava:guava:$guava_version"

    // Utilities
    compile "com.flowpowered:flow-math:$flowmath_version"
    compile "com.github.JonathanxD:JwIUtils:$jwiutils_version"
    compile "com.github.JonathanxD:KWCommands:$kwcommands_version"
    compile "com.github.JonathanxD:AdapterHelper:$adapterhelper_version"
    compile "com.github.JonathanxD:CodeProxy:$codeproxy_version"
    compile "com.github.ProjectSandstone:EventSys:$eventsys_version"
    compile "com.google.code.findbugs:jsr305:$jsr305_version"
    compile "io.github.lukehutch:fast-classpath-scanner:$fastclasspathscanner_version"

    // Logging
    compile "org.slf4j:slf4j-api:1.7.9"

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    apt "com.github.ProjectSandstone:EventSys:$eventsys_version"
    kapt "com.github.ProjectSandstone:EventSys:$eventsys_version"

    // Test
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    // JUnit
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

/*
compileJava {
    source += sourceSets.apt.java
}
*/

sourceSets {
    main {
        java {
            srcDirs "build/generated/source/kapt/main"
        }
    }
}

test {
    useJUnit()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    classifier = 'shaded'
}

dokka {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
    includes = ['src/main/Module.md']
}

kapt {
    correctErrorTypes = true
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives shadowJar
}

license {
    ext.name = project.name
    ext.description = project.description
    ext.organization = project.organization
    ext.url = project.url
    ext.year = Calendar.getInstance().get(Calendar.YEAR)

    exclude "**/*.info"
    exclude "**/*.md"
    exclude "res/**"
    exclude "src/main/resources/**"
    exclude "src/test/resources/**"
    exclude "**/SandstoneEventFactory.java"

    header rootProject.file('LICENSE_HEADER')

    ignoreFailures false
    strictCheck true

    mapping {
        java = 'SLASHSTAR_STYLE'
        kt = 'SLASHSTAR_STYLE'
    }
}

