// Shared gradle config

allprojects {
    // IDE
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    // Programming Language
    apply plugin: 'kotlin'
    apply plugin: 'org.jetbrains.dokka'
    apply plugin: 'java'

    // License
    apply plugin: 'license'

    // Shade
    apply plugin: 'com.github.johnrengelman.shadow'
}

license {
    header rootProject.file("LICENSE_HEADER")
}


sourceCompatibility = 1.8

// Tasks
jar {
    from "$rootProject.rootDir/LICENSE"

    manifest {
        attributes 'Implementation-Title': baseName,
                'Implementation-Version': version
    }
}



dependencies {

    // Dependency injection
    compile 'com.google.inject:guice:4.1.0'

    // Utilities
    compile 'com.github.JonathanxD:JwIUtils:2.5.0'

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Test
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    // JUnit
    testCompile group: 'junit', name:'junit', version: '4.12'
}


repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

test {
    useJUnit()
}

shadowJar {
    classifier = 'shaded'
}

dokka {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives shadowJar
}

license {
    ext.name = project.name
    ext.description = project.description
    ext.organization = project.organization
    ext.url = project.url
    ext.year = Calendar.getInstance().get(Calendar.YEAR)

    exclude "**/*.info"
    exclude "**/*.md"
    exclude "res/**"
    exclude "src/main/resources/**"
    exclude "src/test/resources/**"

    header rootProject.file('LICENSE_HEADER')

    sourceSets = project.sourceSets
    
    ignoreFailures false
    strictCheck true
    
    mapping {
        java = 'JAVADOC_STYLE'
        kt = 'JAVADOC_STYLE'
    }
}

