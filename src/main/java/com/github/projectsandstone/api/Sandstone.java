/*
 *      SandstoneAPI - Minecraft Server Modding API
 *
 *         The MIT License (MIT)
 *
 *      Copyright (c) Sandstone <https://github.com/ProjectSandstone/>
 *      Copyright (c) contributors
 *
 *
 *      Permission is hereby granted, free of charge, to any person obtaining a copy
 *      of this software and associated documentation files (the "Software"), to deal
 *      in the Software without restriction, including without limitation the rights
 *      to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *      copies of the Software, and to permit persons to whom the Software is
 *      furnished to do so, subject to the following conditions:
 *
 *      The above copyright notice and this permission notice shall be included in
 *      all copies or substantial portions of the Software.
 *
 *      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *      OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *      THE SOFTWARE.
 */
package com.github.projectsandstone.api;

import com.github.projectsandstone.api.constants.SandstonePlugin;
import com.github.projectsandstone.api.event.SandstoneEventFactory;
import com.github.projectsandstone.api.event.SandstoneEventFactoryCache;
import com.github.projectsandstone.api.plugin.PluginManager;
import com.github.projectsandstone.api.scheduler.Scheduler;
import com.github.projectsandstone.api.service.ServiceManager;
import com.github.projectsandstone.api.util.version.Version;
import com.github.projectsandstone.api.world.World;
import com.github.projectsandstone.eventsys.event.EventManager;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.nio.file.Path;
import java.util.List;

public final class Sandstone {

    public static final Sandstone INSTANCE = new Sandstone();

    /**
     * Game instance
     */
    private static final Game game = null;

    /**
     * Logger
     */
    private static final Logger logger = null;

    /**
     * Logger factory
     */
    private static final LoggerFactory loggerFactory = null;

    /**
     * Sandstone path
     */
    private static final Path sandstonePath = null;

    /**
     * Sandstone API implementation
     */
    private static final Implementation implementation = null;

    private Sandstone() {
    }

    /**
     * Game instance
     */
    public static Game getGame() {
        return Sandstone.game;
    }

    /**
     * Logger
     */
    public static Logger getLogger() {
        return Sandstone.logger;
    }

    /**
     * Logger factory
     */
    public static LoggerFactory getLoggerFactory() {
        return Sandstone.loggerFactory;
    }

    /**
     * Sandstone path
     */
    public static Path getSandstonePath() {
        return Sandstone.sandstonePath;
    }

    /**
     * Sandstone plugin version. Generally the API version, for platform version uses: {@link
     * Platform#getPlatformVersion()}, and for implementation version uses: {@link
     * Implementation#getVersion()}.
     */
    public static Version getApiVersion() {
        return SandstonePlugin.INSTANCE.getVersion();
    }

    /**
     * Sandstone plugin manager.
     */
    public static PluginManager getPluginManager() {
        return Sandstone.getGame().getPluginManager();
    }

    /**
     * Sandstone scheduler.
     */
    public static Scheduler getScheduler() {
        return Sandstone.getGame().getScheduler();
    }

    /**
     * Sandstone running platform.
     */
    public static Platform getPlatform() {
        return Sandstone.getGame().getPlatform();
    }

    /**
     * Sandstone API Implementation.
     */
    public static Implementation getImplementation() {
        return Sandstone.implementation;
    }

    /**
     * Sandstone event manager.
     */
    public static EventManager getEventManager() {
        return Sandstone.getGame().getEventManager();
    }

    /**
     * Sandstone event factory (generated by apt).
     */
    public static SandstoneEventFactory getEventFactory() {
        return SandstoneEventFactoryCache.getInstance();
    }

    /**
     * Sandstone object factory.
     */
    public static SandstoneObjectFactory getObjectFactory() {
        return Sandstone.getGame().getObjectFactory();
    }

    /**
     * Sandstone object helper.
     */
    public static SandstoneObjectHelper getObjectHelper() {
        return Sandstone.getGame().getObjectHelper();
    }

    /**
     * Sandstone service manager.
     */
    public static ServiceManager getServiceManager() {
        return Sandstone.getGame().getServiceManager();
    }

    /**
     * Sandstone server.
     */
    public static Server getServer() {
        return Sandstone.getGame().getServer();
    }

    /**
     * Sandstone server worlds.
     */
    public static List<World> getWorlds() {
        return Sandstone.getServer().getWorlds();
    }
}
