/*
 *      SandstoneAPI - Minecraft Server Modding API
 *
 *         The MIT License (MIT)
 *
 *      Copyright (c) Sandstone <https://github.com/ProjectSandstone/>
 *      Copyright (c) contributors
 *
 *
 *      Permission is hereby granted, free of charge, to any person obtaining a copy
 *      of this software and associated documentation files (the "Software"), to deal
 *      in the Software without restriction, including without limitation the rights
 *      to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *      copies of the Software, and to permit persons to whom the Software is
 *      furnished to do so, subject to the following conditions:
 *
 *      The above copyright notice and this permission notice shall be included in
 *      all copies or substantial portions of the Software.
 *
 *      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *      OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *      THE SOFTWARE.
 */
package com.github.projectsandstone.api

import com.github.projectsandstone.api.constants.SandstonePlugin
import com.github.projectsandstone.api.event.SandstoneEventFactory
import com.github.projectsandstone.api.event.SandstoneEventFactoryCache
import com.github.projectsandstone.api.logging.LoggerFactory
import com.github.projectsandstone.api.plugin.PluginManager
import com.github.projectsandstone.api.scheduler.Scheduler
import com.github.projectsandstone.api.service.ServiceManager
import com.github.projectsandstone.api.util.version.Version
import com.github.projectsandstone.api.world.World
import com.github.projectsandstone.eventsys.event.EventManager
import org.slf4j.Logger
import java.nio.file.Path

object Sandstone {
    /**
     * Game instance
     */
    @JvmStatic
    private lateinit var game_: Game

    /**
     * Logger
     */
    @JvmStatic
    private lateinit var logger_: Logger

    /**
     * Logger factory
     */
    @JvmStatic
    private lateinit var loggerFactory_: LoggerFactory

    /**
     * Sandstone path
     */
    @JvmStatic
    private lateinit var sandstonePath_: Path

    /**
     * Sandstone API implementation
     */
    @JvmStatic
    private lateinit var implementation_: Implementation

    /**
     * Game instance
     */
    @JvmStatic
    val game: Game
        get() = this.game_

    /**
     * Logger
     */
    @JvmStatic
    val logger: Logger
        get() = this.logger_

    /**
     * Logger factory
     */
    @JvmStatic
    val loggerFactory: LoggerFactory
        get() = this.loggerFactory_

    /**
     * Sandstone path
     */
    @JvmStatic
    val sandstonePath: Path
        get() = this.sandstonePath_

    /**
     * Sandstone plugin version. Generally the API version, for platform version uses: [Platform.platformVersion],
     * and for implementation version uses: [Implementation.version].
     */
    @JvmStatic
    val apiVersion: Version
        get() = SandstonePlugin.version

    /**
     * Sandstone plugin manager.
     */
    @JvmStatic
    val pluginManager: PluginManager
        get() = this.game.pluginManager

    /**
     * Sandstone scheduler.
     */
    @JvmStatic
    val scheduler: Scheduler
        get() = this.game.scheduler

    /**
     * Sandstone running platform.
     */
    @JvmStatic
    val platform: Platform
        get() = this.game.platform

    /**
     * Sandstone API Implementation.
     */
    @JvmStatic
    val implementation: Implementation
        get() = this.implementation_

    /**
     * Sandstone event manager.
     */
    @JvmStatic
    val eventManager: EventManager
        get() = this.game.eventManager

    /**
     * Sandstone event factory (generated by apt).
     */
    @JvmStatic
    val eventFactory: SandstoneEventFactory
        get() = SandstoneEventFactoryCache.getInstance()

    /**
     * Sandstone object factory.
     */
    @JvmStatic
    val objectFactory: SandstoneObjectFactory
        get() = this.game.objectFactory

    /**
     * Sandstone object helper.
     */
    @JvmStatic
    val objectHelper: SandstoneObjectHelper
        get() = this.game.objectHelper

    /**
     * Sandstone service manager.
     */
    @JvmStatic
    val serviceManager: ServiceManager
        get() = this.game.serviceManager

    /**
     * Sandstone server.
     */
    @JvmStatic
    val server: Server
        get() = this.game.server

    /**
     * Sandstone server worlds.
     */
    @JvmStatic
    val worlds: List<World> = this.game.server.worlds

}